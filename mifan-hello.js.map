{"version":3,"file":"mifan-hello.js","sourceRoot":"","sources":["src/mifan-hello.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,GAAG,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,UAAU;IAA1C;;QAQE,8BAA8B;QAE9B,SAAI,GAAY,OAAO,CAAC;IAK1B,CAAC;IAHU,MAAM;QACb,OAAO,IAAI,CAAA,aAAa,IAAI,CAAC,IAAI,OAAO,CAAC;IAC3C,CAAC;CACF,CAAA;AAdC,+DAA+D;AAC/C,iBAAM,GAAG,GAAG,CAAA;;;;GAI1B,CAAA;AAIF;IADC,QAAQ,EAAE;wCACa;AAVb,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CAetB;SAfY,UAAU","sourcesContent":["import {LitElement, css, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('mifan-hello')\nexport class MiFanHello extends LitElement {\n  // Define scoped styles right with your component, in plain CSS\n  static override styles = css`\n    :host {\n      color: blue;\n    }\n  `;\n\n  // Declare reactive properties\n  @property()\n  name?: string = 'World';\n\n  override render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'mifan-hello': MiFanHello;\n  }\n}\n"]}